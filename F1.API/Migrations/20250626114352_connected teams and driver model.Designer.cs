// <auto-generated />
using System;
using F1.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace F1.API.Migrations
{
    [DbContext(typeof(F1DbContext))]
    [Migration("20250626114352_connected teams and driver model")]
    partial class connectedteamsanddrivermodel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("F1.API.Models.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("F1.API.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac2614dc-d31a-4c8e-8942-8ddf3e935db7"),
                            Name = "Ferrari"
                        },
                        new
                        {
                            Id = new Guid("52f1f598-ac3d-4935-bc12-4992cfda1a83"),
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = new Guid("b3525116-0539-4e29-820c-acb2e1e04975"),
                            Name = "Red Bull Racing"
                        },
                        new
                        {
                            Id = new Guid("f04b5bb2-2340-45d6-8b4e-8ee91a08fe2b"),
                            Name = "McLaren"
                        },
                        new
                        {
                            Id = new Guid("e3ad6c87-c25a-4c23-92e5-dab0c4fd25d4"),
                            Name = "Alpine"
                        },
                        new
                        {
                            Id = new Guid("949b9cbf-6044-4708-8263-3c002d43a0a5"),
                            Name = "Aston Martin"
                        });
                });

            modelBuilder.Entity("F1.API.Models.Driver", b =>
                {
                    b.HasOne("F1.API.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
